// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"Monitoring-Opportunities/src/api"
	"Monitoring-Opportunities/src/api/controller"
	"Monitoring-Opportunities/src/config"
	"Monitoring-Opportunities/src/database"
	"Monitoring-Opportunities/src/gateway"
	"Monitoring-Opportunities/src/repository"
	"Monitoring-Opportunities/src/services"
)

// Injectors from wire.go:

func InitializeAPI(cfg config.Config) (*http.ServerHTTP, error) {
	mongoDatabase, err := database.NewMongoDatabase(cfg)
	if err != nil {
		return nil, err
	}
	productRepository := repository.NewProductRepository(mongoDatabase)
	productService := service.NewProductService(productRepository)
	productController := handler.NewProductController(productService)
	ethereumClient, err := gateway.NewEthereumRpcClient(cfg)
	if err != nil {
		return nil, err
	}
	dexGateway := gateway.NewUniswapV2PairGateway(ethereumClient)
	uniswapV2PairService := service.NewUniswapV2PairService(dexGateway)
	poolController := handler.NewPoolController(uniswapV2PairService)
	serverHTTP := http.NewServerHTTP(productController, poolController)
	return serverHTTP, nil
}
